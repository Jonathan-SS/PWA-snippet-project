{
  "version": 3,
  "sources": ["browser-route-module:/Users/jonathanskovmose/Documents/GitHub/PWA-snippet-project/app/routes/snippets/$snippetTag.jsx?browser", "../../../../app/routes/snippets/$snippetTag.jsx", "../../../../app/components/SnippetListItem.jsx"],
  "sourcesContent": ["export { ErrorBoundary, default } from \"/Users/jonathanskovmose/Documents/GitHub/PWA-snippet-project/app/routes/snippets/$snippetTag.jsx\";", "import { Outlet, useActionData } from \"@remix-run/react\";\nimport { useLoaderData, Form, useParams } from \"remix\";\nimport SnippetListItem from \"~/components/SnippetListItem\";\nimport connectDb from \"~/db/connectDb.server.js\";\nimport { SearchIcon } from \"~/svg/all\";\n\nexport async function loader({ params }) {\n  const db = await connectDb();\n  switch (params.snippetTag) {\n    case \"all\":\n      return await db.models.Snippet.find();\n    case \"JavaScript\":\n      return await db.models.Snippet.find({ languageTag: \"JavaScript\" });\n\n    case \"TypeScript\":\n      return await db.models.Snippet.find({ languageTag: \"TypeScript\" });\n\n    case \"PHP\":\n      return await db.models.Snippet.find({ languageTag: \"PHP\" });\n\n    case \"HTML\":\n      return await db.models.Snippet.find({ languageTag: \"HTML\" });\n\n    case \"CSS\":\n      return await db.models.Snippet.find({ languageTag: \"CSS\" });\n    default:\n      return await db.models.Snippet.find();\n  }\n}\n\nexport async function action({ request, params }) {\n  const language = String(params.snippetTag);\n  const form = await request.formData();\n  const _action = form.get(\"_action\");\n  const db = await connectDb();\n  switch (_action) {\n    case \"search\":\n      const query = form.get(\"searchQuery\");\n      const searchSnippets = await db.models.Snippet.find({\n        title: { $regex: new RegExp(query, \"i\") },\n      });\n\n      return searchSnippets;\n\n    case \"sort\":\n      const sortMethod = form.get(\"sortMethod\");\n      let snippets = [];\n\n      if (sortMethod === \"updated\") {\n        if (!(language === \"all\")) {\n          snippets = await db.models.Snippet.find({\n            languageTag: language,\n          }).sort({\n            lastModified: 1,\n          });\n        } else {\n          snippets = await db.models.Snippet.find().sort({\n            lastModified: 1,\n          });\n        }\n      } else if (sortMethod === \"added\") {\n        if (!(language === \"all\")) {\n          snippets = await db.models.Snippet.find({\n            languageTag: language,\n          }).sort({\n            dateAdded: 1,\n          });\n        } else {\n          snippets = await db.models.Snippet.find().sort({\n            dateAdded: 1,\n          });\n        }\n      } else if (sortMethod === \"title\") {\n        if (!(language === \"all\")) {\n          snippets = await db.models.Snippet.find({\n            languageTag: language,\n          }).sort({\n            title: 1,\n          });\n        } else {\n          snippets = await db.models.Snippet.find().sort({\n            title: 1,\n          });\n        }\n      } else if (sortMethod === \"favorites\") {\n        if (!(language === \"all\")) {\n          snippets = await db.models.Snippet.find({\n            languageTag: language,\n            favorite: 1,\n          });\n        } else {\n          snippets = await db.models.Snippet.find({ favorite: 1 });\n        }\n      }\n\n      return snippets;\n  }\n}\n\nexport default function Index() {\n  const snippets = useLoaderData();\n  const actionSnippets = useActionData();\n  const languageTag = useParams().snippetTag;\n\n  return (\n    <div className=\"\">\n      <div className=\" h-44 w-full px-3 md:w-30-vw lg:w-25-vw md:h-full fixed md:border-r border-b-slate-400 md:dark:border-gray-700 \">\n        <div className=\"md: border-b md:dark:border-gray-700 mb-4 pb-2\">\n          <div className=\"flex items-center justify-between\">\n            <h1 className=\"text-2xl font-bold\">{languageTag} Snippets</h1>\n          </div>\n\n          <Form method=\"post\" className=\"flex my-2\">\n            <input\n              className=\"rounded px-1 border-b-slate-400 dark:border-none dark:text-gray-800 mr-2\"\n              type=\"text\"\n              name=\"searchQuery\"\n              placeholder=\"Search snippets...\"\n            />\n            <input type=\"hidden\" name=\"_action\" value=\"search\" />\n            <button type=\"submit\">\n              <SearchIcon />\n            </button>\n          </Form>\n          <Form method=\"post\">\n            <select name=\"sortMethod\" className=\"dark:text-gray-800 rounded-lg\">\n              <option value=\"updated\">Last updated</option>\n              <option value=\"title\">Title</option>\n              <option value=\"favorites\">Favorites</option>\n              <option value=\"added\">Date added</option>\n            </select>\n            <input type=\"hidden\" name=\"_action\" value=\"sort\" />\n            <button\n              className=\"ml-3 dark:bg-gray-800 dark:hover:bg-gray-700 px-3 rounded-lg py-1 bg-blue-800 hover:bg-blue-600 text-white \"\n              type=\"submit\"\n            >\n              Sort\n            </button>\n          </Form>\n        </div>\n\n        <div className=\" h-44 w-full mt-2 md:mt-2 md:h-4/5 overflow-scroll scrollbar-hide md:pb-10\">\n          <ul className=\" list-none gap-1 flex flex-shrink-0 flex-nowrap  md:flex-col \">\n            {actionSnippets\n              ? actionSnippets.map((snippet) => (\n                  <SnippetListItem key={snippet._id} snippet={snippet} />\n                ))\n              : snippets.map((snippet) => (\n                  <SnippetListItem\n                    key={snippet._id}\n                    snippet={snippet}\n                    languageTag={languageTag}\n                  />\n                ))}\n            {!actionSnippets && snippets.length === 0 ? (\n              <h2>No snippets found</h2>\n            ) : null}\n          </ul>\n        </div>\n      </div>\n      <div className=\" mt-72 md:ml-3 md:mt-0 fixed overflow-y-scroll\">\n        <Outlet />\n      </div>\n    </div>\n  );\n}\n\nexport function ErrorBoundary({ error }) {\n  return (\n    <h1 className=\"text-red-500 font-bold\">\n      {error.name}: {error.message}\n    </h1>\n  );\n}\n", "import { Link } from \"remix\";\n\nimport { StarIcon } from \"~/svg/all\";\n\nexport default function SnippetListItem({ snippet, languageTag }) {\n  const dateAdded = new Date(snippet.dateAdded);\n  const displayDate = `${dateAdded.getDate()}-${dateAdded.getMonth()}-${dateAdded.getFullYear()}`;\n  return (\n    <li className=\" min-w-200-px md:w-full  rounded-lg hover:bg-blue-600  bg-blue-800 dark:bg-gray-800 dark:hover:bg-gray-700 p-3 mb-1 \">\n      <Link to={`/snippets/${languageTag}/${snippet._id}`}>\n        <h2 className=\" text-white text-xl font-semibold\">{snippet.title}</h2>\n        <p className=\" text-white  dark:text-gray-400\">\n          {snippet.description.substring(0, 30)} ...\n        </p>\n        <div className=\"flex justify-between mt-1\">\n          <p className=\" text-white dark:text-gray-300\">{displayDate}</p>\n          <StarIcon fill={snippet.favorite} />\n        </div>\n      </Link>\n    </li>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;;;ACAA;;;ACAA;AAIe,yBAAyB,EAAE,SAAS,eAAe;AAChE,QAAM,YAAY,IAAI,KAAK,QAAQ;AACnC,QAAM,cAAc,GAAG,UAAU,aAAa,UAAU,cAAc,UAAU;AAChF,SACE,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACZ,oCAAC,MAAD;AAAA,IAAM,IAAI,aAAa,eAAe,QAAQ;AAAA,KAC5C,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAqC,QAAQ,QAC3D,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KACV,QAAQ,YAAY,UAAU,GAAG,KAAI,SAExC,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAkC,cAC/C,oCAAC,UAAD;AAAA,IAAU,MAAM,QAAQ;AAAA;AAAA;;;ADblC,8BAAsB;AAgGP,iBAAiB;AAC9B,QAAM,WAAW;AACjB,QAAM,iBAAiB;AACvB,QAAM,cAAc,YAAY;AAEhC,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAsB,aAAY,eAGlD,oCAAC,MAAD;AAAA,IAAM,QAAO;AAAA,IAAO,WAAU;AAAA,KAC5B,oCAAC,SAAD;AAAA,IACE,WAAU;AAAA,IACV,MAAK;AAAA,IACL,MAAK;AAAA,IACL,aAAY;AAAA,MAEd,oCAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAS,MAAK;AAAA,IAAU,OAAM;AAAA,MAC1C,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,KACX,oCAAC,YAAD,SAGJ,oCAAC,MAAD;AAAA,IAAM,QAAO;AAAA,KACX,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAa,WAAU;AAAA,KAClC,oCAAC,UAAD;AAAA,IAAQ,OAAM;AAAA,KAAU,iBACxB,oCAAC,UAAD;AAAA,IAAQ,OAAM;AAAA,KAAQ,UACtB,oCAAC,UAAD;AAAA,IAAQ,OAAM;AAAA,KAAY,cAC1B,oCAAC,UAAD;AAAA,IAAQ,OAAM;AAAA,KAAQ,gBAExB,oCAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAS,MAAK;AAAA,IAAU,OAAM;AAAA,MAC1C,oCAAC,UAAD;AAAA,IACE,WAAU;AAAA,IACV,MAAK;AAAA,KACN,WAML,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACX,iBACG,eAAe,IAAI,CAAC,YAClB,oCAAC,iBAAD;AAAA,IAAiB,KAAK,QAAQ;AAAA,IAAK;AAAA,QAErC,SAAS,IAAI,CAAC,YACZ,oCAAC,iBAAD;AAAA,IACE,KAAK,QAAQ;AAAA,IACb;AAAA,IACA;AAAA,OAGP,CAAC,kBAAkB,SAAS,WAAW,IACtC,oCAAC,MAAD,MAAI,uBACF,SAIV,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,QAAD;AAAA;AAMD,uBAAuB,EAAE,SAAS;AACvC,SACE,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACX,MAAM,MAAK,MAAG,MAAM;AAAA;",
  "names": []
}
